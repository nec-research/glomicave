<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Glomicave</groupId>
  <artifactId>Glomicave</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <!-- <slf4j.version>1.7.36</slf4j.version> -->
    <aws.java.sdk.version>2.18.16</aws.java.sdk.version>
  </properties>

  <dependencies>
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>8.0.23</version>
		</dependency>
		
		<dependency>
		    <groupId>org.neo4j.driver</groupId>
		    <artifactId>neo4j-java-driver</artifactId>
		    <version>5.11.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20201115</version>
		</dependency>
		
		<dependency>
		  <groupId>edu.stanford.nlp</groupId>
		  <artifactId>stanford-corenlp</artifactId>
		  <version>4.2.0</version>
		  		  
		  <!-- exclude import of xml parser to avoid conflict with imported from Amazon libraries -->
		  <exclusions>
			  <exclusion>
			    <groupId>xml-apis</groupId>
			    <artifactId>xml-apis</artifactId>
			</exclusion> 
		  </exclusions> 
		</dependency>
		
		
		<!-- https://mvnrepository.com/artifact/it.unimi.dsi/fastutil -->
		<!-- For the token search -->
		<dependency>
		    <groupId>it.unimi.dsi</groupId>
		    <artifactId>fastutil</artifactId>
		    <version>8.1.0</version>
		</dependency>
		
		<!-- Stanford CoreNLP 3.8.0 dependencies 
		<dependency>
		    <groupId>edu.stanford.nlp</groupId>
		    <artifactId>stanford-corenlp</artifactId>
		    <version>3.8.0</version>
		</dependency>
		<dependency>
		    <groupId>edu.stanford.nlp</groupId>
		    <artifactId>stanford-corenlp</artifactId>
		    <version>3.8.0</version>
		    <classifier>models</classifier>
		</dependency>
		-->
		<dependency>
		    <groupId>edu.stanford.nlp</groupId>
		    <artifactId>stanford-corenlp</artifactId>
		    <version>4.2.0</version>
		    <classifier>models</classifier>
		    
		   <!-- exclude import of xml parser to avoid conflict with imported from Amazon libraries -->
		  <exclusions>
			  <exclusion>
			    <groupId>xml-apis</groupId>
			    <artifactId>xml-apis</artifactId>
			</exclusion> 
		  </exclusions> 
		</dependency>
		
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		    <version>1.13.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.jena</groupId>
		    <artifactId>jena-text</artifactId>
		    <version>4.2.0</version>
		</dependency>
		
		<!--
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-nop</artifactId>
		    <version>1.7.36</version>
		</dependency>
		-->
	
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>5.0.0-M5</version>
		</dependency>


		<dependency>
		    <groupId>com.opencsv</groupId>
		    <artifactId>opencsv</artifactId>
		    <version>4.1</version>
		</dependency>
	
			<!-- Added for MinIE integration -->
		<dependency>
		    <groupId>it.unimi.dsi</groupId>
		    <artifactId>fastutil</artifactId>
		    <version>8.1.0</version>
		</dependency>
		
			<!-- Added for AWS SDK -->
			
		<dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>software.amazon.awssdk</groupId>
                    <artifactId>netty-nio-client</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>software.amazon.awssdk</groupId>
                    <artifactId>apache-client</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

		<!-- Dependencies for using logging -->
        
        <!-- 
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        -->
        <!--
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
                -->
                
           <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j</artifactId>
		    <version>2.20.0</version>
		    <type>pom</type>
		  </dependency>
                
                        
          <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.20.0</version>
		  </dependency>
        
        <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.20.0</version>
		</dependency> 
		 		        
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		    <version>2.20.0</version>
		  </dependency>    
	
		

        <!-- Needed to adapt Apache Commons Logging used by Apache HTTP Client to Slf4j to avoid
        ClassNotFoundException: org.apache.commons.logging.impl.LogFactoryImpl during runtime -->
       
       <!-- 
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        -->
        
        
        <!-- AWS Gremlin/Neptune dependencies
        
        <dependency>
			  <groupId>org.apache.tinkerpop</groupId>
			  <artifactId>gremlin-driver</artifactId>
			  <version>3.5.3</version>
	    </dependency>
	    
	    <dependency>
			  <groupId>com.amazonaws</groupId>
			  <artifactId>amazon-neptune-sigv4-signer</artifactId>
			  <version>2.4.0</version>
		</dependency>
		 -->
        <!-- AWS Athena dependencies -->
		
		<dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>athena</artifactId>
        </dependency>
	    
	    
	    <!-- https://mvnrepository.com/artifact/org.apache.tinkerpop/gremlin-groovy
	      (Not needed for TinkerPop version 3.5.2 and up)
	    <dependency>
	      <groupId>org.apache.tinkerpop</groupId>
	      <artifactId>gremlin-groovy</artifactId>
	      <version>3.5.3</version>
	    </dependency> -->
        <!--
        <dependency>
		    <groupId>com.amazonaws.athena.jdbc</groupId>
		    <artifactId>athenaJDBC</artifactId>
		    <version>2.0.35</version>
		</dependency>
		        -->
		        
		        
		<!-- Dependency for the CLI tool -->
		
		<dependency>
			  <groupId>info.picocli</groupId>
			  <artifactId>picocli</artifactId>
			  <version>4.7.5</version>
		</dependency>
		        
   </dependencies>

	<!-- Added for AWS SDK -->


   <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws.java.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


	<!-- Added for compilation -->


	<build>
	  <plugins>
	    <plugin>
	      <!-- Build an executable JAR -->
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-jar-plugin</artifactId>
	      <version>3.1.0</version>
	      <configuration>
	        <archive>
	          <manifest>
	            <addClasspath>true</addClasspath>
	            <classpathPrefix>lib/</classpathPrefix>
	            <mainClass>eu.glomicave.GlomicaveKG</mainClass>
	          </manifest>
	        </archive>
	      </configuration>
	    </plugin>
	  </plugins>
	</build>


</project>